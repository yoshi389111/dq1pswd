#ifndef DQ2_H
#define DQ2_H

#ifdef __cplusplus
extern "C" {
#endif

/**********************************************************
** DQ2 復活の呪文解析用関数群
** @(#) $Header: dq2.h, v 0.1 1998/02/09 yotti@imasy.or.jp $
**
** 漢字コードは Shift_JIS か EUC-JP を仮定
***********************************************************/

/**********************************************************
** 復活の呪文に含まれる各種データを格納する構造体
***********************************************************/
struct dq2pswd {

	int ro_name[4] ;
	int ro_item[8] ;
	int ro_exp ;

	int sa_flg ;
	int sa_item[8] ;
	int sa_exp ;

	int mu_flg ;
	int mu_item[8] ;
	int mu_exp ;

	int gold ;
	int town ;
	int flg_moon, flg_gate, flg_plumage, flg_ship, flg_plince ;
	int crest_life, crest_water, crest_moon, crest_star, crest_sun ;

	int crypt_key ;

	int check ;	/* 未使用 */
} ;


/**********************************************************
** 名前(int name1[4]) を文字列(char name2[9])に変換
**
** 復活の呪文用データ(struct dq2pswd)の中の
** int ro_name[4] の名前を、文字列に変換する
** 文字列は char [9] のエリアを確保して
** そのアドレスを渡すこと
***********************************************************/
void dq2_cnv_int2name(
	int *name1,
	char *name2) ;


/**********************************************************
** 名前(char *name1) を数字(int name2[4])に変換
**
** 文字列の名前を int [4] の名前に変換する
** 濁点・半濁点付きの文字も普通に読み換える
** 不正な文字があると、その時点で変換を中止する
***********************************************************/
void dq2_cnv_name2int(
	char *name1,
	int *name2) ;


/**********************************************************
** 呪文(int pswd1[53]) を文字列(char pswd2[135])に変換
**
** 呪文を作成( dq2_make_pswd() )した際の呪文(int[53])を
** 文字列に直す関数
** 135 byte 以上のエリアが必要
***********************************************************/
void dq2_cnv_int2pswd(
	int *pswd1,
	char *pswd2) ;


/**********************************************************
** 呪文を捏造する
**
** struct dq2pswd 型構造体の各データを基に、
** 復活の呪文(int [53])を作成する
** 構造体内のチェックコードのデータは使用しない
***********************************************************/
void dq2_make_pswd(
	struct dq2pswd *dq2,
	int *pswd) ;


/**********************************************************
** 主人公の名前から王子と王女の名前を求める
**
***********************************************************/
void dq2_make_names(
	int *ro_name,
	char **sa_name,
	char **mu_name) ;


/**********************************************************
** アイテムリスト(64種類)
**
** dq2_item_list[0]  = アイテムを持っていない状態
***********************************************************/
extern char *dq2_item_list[64] ;

/**********************************************************
** 装備可能かどうか
**
** dq2_equip[item_number] =
**   01 : ローレシアの王子が装備可能
**   02 : サマルトリアの王子が装備可能
**   04 : ムーンブルクの王女が装備可能
***********************************************************/
extern int dq2_equip[64] ;

#ifdef __cplusplus
} ;
#endif


#endif /* DQ2_H */
