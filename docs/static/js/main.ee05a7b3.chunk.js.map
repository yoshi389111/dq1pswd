{"version":3,"sources":["dq1pswd/dq1pswd.ts","parts/OutputLabel.tsx","dq1utils.ts","Dq1Analize.tsx","Dq1Info.tsx","parts/InputString.tsx","parts/InputNumber.tsx","parts/SelectItem.tsx","Dq1Edit.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NAME_ALPHABET","HANKAKU_TO_ZENKAKU","NAME_ALIAS","JUMON_ALPHABET","JUMON_ALIAS","LEVELS","wapons","id","name","armors","shilds","items","illegal","Dq1Password","exp","i","length","nameNums","filter","num","map","charAt","join","split","ch","flatMap","indexOf","push","slice","passwordNums","password","includes","bytes","crc","octed","j","carryBit","info","this","toNumberName","cryptKey","deadAmulet","gold","golemSlayered","dragonSlayered","wapon","armor","shild","key","herb","dragonScale","fighterRing","calcuteCrc","codes","bit24","prevCode","toStringPassword","normalized","toNormalizePassword","toNumberPassword","JUMON_LENGTH","toStringName","checkCode","level","toLevel","valid","checkInfo","index","position","analyzePassword","createPassword","passwords","newPassword","substring","resolved","hatenaPassword","Array","prototype","apply","pswd","OutputLabel","label","value","error","className","clipboardCopy","text","copyFrom","document","createElement","bodyElm","getElementsByTagName","appendChild","textContent","select","result","execCommand","removeChild","alert","doTweet","message","url","encodeURIComponent","window","open","toHex2","toString","toUpperCase","substr","dq1","dq1pswd","INVALID_ITEM","Dq1Edit","setPassword","moveEdit","useState","nowPassword","setNowPassword","targetPassword","setTargetPassword","setPasswords","validLength","setValidLength","validItem1","setValidItem1","validItem2","setValidItem2","validItem3","setValidItem3","validItem4","setValidItem4","validItem5","setValidItem5","validItem6","setValidItem6","validItem7","setValidItem7","validItem8","setValidItem8","validKey","setValidKey","validHerb","setValidHerb","validHatena","setValidHatena","emptyPasswords","setEmptyPasswords","analyze","normalize","count","countHatena","workPswd","replace","canAnalyze","editPassword","process","nextTick","list","useEffect","errorPassword","errorMessage","passwordList","onClick","scrollTo","cols","rows","onChange","e","target","Dq1Info","utils","InputString","placeholder","setValue","type","event","defaultProps","InputNumber","min","max","Number","isNaN","onFocus","SelectItem","options","item","selected","find","herbAndKeyItems","cryptItems","equipItems","slayerItems","moveAnalize","show","setShow","setName","setGold","setWapon","setArmor","setShild","setHerb","setKey","item1","setItem1","item2","setItem2","item3","setItem3","item4","setItem4","item5","setItem5","item6","setItem6","item7","setItem7","item8","setItem8","scale","setScale","ring","setRing","amulet","setAmulet","dragon","setDragon","golem","setGolem","setExp","crypt","setCrypt","setCrc","passwordInDialogue","dialogue","stopPropagation","modalDialog","App","page","setPage","movePage","Dq1Analize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ee05a7b3.chunk.js","sourcesContent":["/** DQ1用復活の呪文の解析/捏造 */\n\n/** 名前の長さ */\nconst NAME_LENGTH = 4;\n/** 復活の呪文の長さ[文字数](1文字=6bit) */\nconst JUMON_LENGTH = 20;\n/** 復活の呪文のコードの長さ[バイト] */\nconst CODE_LENGTH = 15; // JUMON_LENGTH * 3 / 4\n/** 名前用五十音 */\nconst NAME_ALPHABET: Readonly<string> =\n    \"０１２３４５６７８９\" +\n    \"あいうえお\" +\n    \"かきくけこ\" +\n    \"さしすせそ\" +\n    \"たちつてと\" +\n    \"なにぬねの\" +\n    \"はひふへほ\" +\n    \"まみむめも\" +\n    \"やゆよ\" +\n    \"らりるれろ\" +\n    \"わをん\" +\n    \"っゃゅょ\" +\n    \"゛゜－　\"; // 全角スペース\n/** 不正なアイテム番号 */\nconst INVALID_ITEM = 15;\n\n/** 半角カナを全角かなに変換する読み替えデータ */\nconst HANKAKU_TO_ZENKAKU: Readonly<{ [key: string]: string }> = {\n    \"0\": \"０\", \"1\": \"１\", \"2\": \"２\", \"3\": \"３\", \"4\": \"４\",\n    \"5\": \"５\", \"6\": \"６\", \"7\": \"７\", \"8\": \"８\", \"9\": \"９\",\n    \"ｦ\": \"を\", \"ｧ\": \"ぁ\", \"ｨ\": \"ぃ\", \"ｩ\": \"ぅ\", \"ｪ\": \"ぇ\", \"ｫ\": \"ぉ\",\n    \"ｬ\": \"ゃ\", \"ｭ\": \"ゅ\", \"ｮ\": \"ょ\", \"ｯ\": \"っ\", \"ｰ\": \"ー\",\n    \"ｱ\": \"あ\", \"ｲ\": \"い\", \"ｳ\": \"う\", \"ｴ\": \"え\", \"ｵ\": \"お\",\n    \"ｶ\": \"か\", \"ｷ\": \"き\", \"ｸ\": \"く\", \"ｹ\": \"け\", \"ｺ\": \"こ\",\n    \"ｻ\": \"さ\", \"ｼ\": \"し\", \"ｽ\": \"す\", \"ｾ\": \"せ\", \"ｿ\": \"そ\",\n    \"ﾀ\": \"た\", \"ﾁ\": \"ち\", \"ﾂ\": \"つ\", \"ﾃ\": \"て\", \"ﾄ\": \"と\",\n    \"ﾅ\": \"な\", \"ﾆ\": \"に\", \"ﾇ\": \"ぬ\", \"ﾈ\": \"ね\", \"ﾉ\": \"の\",\n    \"ﾊ\": \"は\", \"ﾋ\": \"ひ\", \"ﾌ\": \"ふ\", \"ﾍ\": \"へ\", \"ﾎ\": \"ほ\",\n    \"ﾏ\": \"ま\", \"ﾐ\": \"み\", \"ﾑ\": \"む\", \"ﾒ\": \"め\", \"ﾓ\": \"も\",\n    \"ﾔ\": \"や\", \"ﾕ\": \"ゆ\", \"ﾖ\": \"よ\",\n    \"ﾗ\": \"ら\", \"ﾘ\": \"り\", \"ﾙ\": \"る\", \"ﾚ\": \"れ\", \"ﾛ\": \"ろ\",\n    \"ﾜ\": \"わ\", \"ﾝ\": \"ん\", \"ﾞ\": \"゛\", \"ﾟ\": \"゜\", \" \": \"　\",\n};\n\n/** 名前読み換えデータ */\nconst NAME_ALIAS: Readonly<{[key: string]: string}> = {\n    \"ぁ\": \"あ\", \"ぃ\": \"い\", \"ぅ\": \"う\", \"ぇ\": \"え\", \"ぉ\": \"お\",\n    \"が\": \"か゛\", \"ぎ\": \"き゛\", \"ぐ\": \"く゛\", \"げ\": \"け゛\", \"ご\": \"こ゛\",\n    \"ざ\": \"さ゛\", \"じ\": \"し゛\", \"ず\": \"す゛\", \"ぜ\": \"せ゛\", \"ぞ\": \"そ゛\",\n    \"だ\": \"た゛\", \"ぢ\": \"ち゛\", \"づ\": \"つ゛\", \"で\": \"て゛\", \"ど\": \"と゛\",\n    \"ば\": \"は゛\", \"び\": \"ひ゛\", \"ぶ\": \"ふ゛\", \"べ\": \"へ゛\", \"ぼ\": \"ほ゛\",\n    \"ぱ\": \"は゜\", \"ぴ\": \"ひ゜\", \"ぷ\": \"ふ゜\", \"ぺ\": \"へ゜\", \"ぽ\": \"ほ゜\",\n    \"ゐ\": \"い\", \"ゑ\": \"え\", \"\\u3094\": \"う゛\", // 「う」＋濁点\n    \"\\u308e\": \"わ\", \"\\u3095\": \"か\", \"\\u3096\": \"け\", // 小さい「わ」「か」「け」\n    \"ァ\": \"あ\", \"ィ\": \"い\", \"ゥ\": \"う\", \"ェ\": \"え\", \"ォ\": \"お\",\n    \"ア\": \"あ\", \"イ\": \"い\", \"ウ\": \"う\", \"エ\": \"え\", \"オ\": \"お\",\n    \"カ\": \"か\", \"キ\": \"き\", \"ク\": \"く\", \"ケ\": \"け\", \"コ\": \"こ\",\n    \"サ\": \"さ\", \"シ\": \"し\", \"ス\": \"す\", \"セ\": \"せ\", \"ソ\": \"そ\",\n    \"タ\": \"た\", \"チ\": \"ち\", \"ツ\": \"つ\", \"テ\": \"て\", \"ト\": \"と\",\n    \"ナ\": \"な\", \"ニ\": \"に\", \"ヌ\": \"ぬ\", \"ネ\": \"ね\", \"ノ\": \"の\",\n    \"ハ\": \"は\", \"ヒ\": \"ひ\", \"フ\": \"ふ\", \"ヘ\": \"へ\", \"ホ\": \"ほ\",\n    \"マ\": \"ま\", \"ミ\": \"み\", \"ム\": \"む\", \"メ\": \"め\", \"モ\": \"も\",\n    \"ヤ\": \"や\", \"ユ\": \"ゆ\", \"ヨ\": \"よ\",\n    \"ラ\": \"ら\", \"リ\": \"り\", \"ル\": \"る\", \"レ\": \"れ\", \"ロ\": \"ろ\",\n    \"ワ\": \"わ\", \"ヲ\": \"を\", \"ン\": \"ん\",\n    \"ガ\": \"か゛\", \"ギ\": \"き゛\", \"グ\": \"く゛\", \"ゲ\": \"け゛\", \"ゴ\": \"こ゛\",\n    \"ザ\": \"さ゛\", \"ジ\": \"し゛\", \"ズ\": \"す゛\", \"ゼ\": \"せ゛\", \"ゾ\": \"そ゛\",\n    \"ダ\": \"た゛\", \"ヂ\": \"ち゛\", \"ヅ\": \"つ゛\", \"デ\": \"て゛\", \"ド\": \"と゛\",\n    \"バ\": \"は゛\", \"ビ\": \"ひ゛\", \"ブ\": \"ふ゛\", \"ベ\": \"へ゛\", \"ボ\": \"ほ゛\",\n    \"パ\": \"は゜\", \"ピ\": \"ひ゜\", \"プ\": \"ふ゜\", \"ペ\": \"へ゜\", \"ポ\": \"ほ゜\",\n    \"ャ\": \"ゃ\", \"ュ\": \"ゅ\", \"ョ\": \"ょ\", \"ッ\": \"っ\",\n    \"ヰ\": \"い\", \"ヱ\": \"え\", \"ヴ\": \"う゛\",\n    \"\\u30ee\": \"わ\", \"\\u30f5\": \"か\", \"\\u30f6\": \"け\", // 小さい「ワ」「カ」「ケ」\n    \"\\u30f7\": \"わ゛\", \"\\u30f8\": \"い゛\", \"\\u30f9\": \"え゛\", \"\\u30fa\": \"を゛\", // 「ワ」「ヰ」「ヱ」「ヲ」＋濁点\n    \"\\u3099\": \"\\u309b\", \"\\u309a\": \"\\u309c\", // 結合文字用濁点/半濁点\n    // アイヌ語表音拡張（小さいカタカナ）\n    \"\\u31f0\": \"く\", \"\\u31f1\": \"し\", \"\\u31f2\": \"す\", \"\\u31f3\": \"と\", \"\\u31f4\": \"ぬ\",\n    \"\\u31f5\": \"は\", \"\\u31f6\": \"ひ\", \"\\u31f7\": \"ふ\", \"\\u31f8\": \"へ\", \"\\u31f9\": \"ほ\",\n    \"\\u31fa\": \"む\",\n    \"\\u31fb\": \"ら\", \"\\u31fc\": \"り\", \"\\u31fd\": \"る\", \"\\u31fe\": \"れ\", \"\\u31ff\": \"ろ\",\n};\n\n/** 復活の呪文用五十音 */\nconst JUMON_ALPHABET: Readonly<string> =\n    \"あいうえお\" +\n    \"かきくけこ\" +\n    \"さしすせそ\" +\n    \"たちつてと\" +\n    \"なにぬねの\" +\n    \"はひふへほ\" +\n    \"まみむめも\" +\n    \"やゆよ\" +\n    \"らりるれろ\" +\n    \"わ\" +\n    \"がぎぐげご\" +\n    \"ざじずぜぞ\" +\n    \"だぢづでど\" +\n    \"ばびぶべぼ\";\n\n/** 復活の呪文読み換えデータ */\nconst JUMON_ALIAS: Readonly<{[key: string]: string}> = {\n    \"ぁ\": \"あ\", \"ぃ\": \"い\", \"ぅ\": \"う\", \"ぇ\": \"え\", \"ぉ\": \"お\",\n    \"ゃ\": \"や\", \"ゅ\": \"ゆ\", \"ょ\": \"よ\", \"っ\": \"つ\", \"を\": \"お\",\n    \"＊\": \"？\", \"?\": \"？\", \"*\": \"？\"\n};\n\n/**\n * レベル（経験値）一覧\n *\n * Level 1 の必要経験値 = LEVELS[0]\n * Level n の必要経験値 = LEVELS[n-1]\n */\nconst LEVELS: ReadonlyArray<number> = [\n    0, 7, 23, 47, 110, 220, 450, 800, 1300, 2000,\n    2900, 4000, 5500, 7500, 10000, 13000, 17000, 21000, 25000, 29000,\n    33000, 37000, 41000, 45000, 49000, 53000, 57000, 61000, 65000, 65535];\n\n/** 選択肢 */\nexport interface LabelInfo {\n    /** id */\n    id: number;\n    /** 名称 */\n    name: string;\n    /** 異例データ */\n    illegal?: boolean;\n}\n\n/** 武器の一覧 */\nexport const wapons: ReadonlyArray<LabelInfo> = [\n    { id: 0, name: \"なし\" },\n    { id: 1, name: \"たけざお\" },\n    { id: 2, name: \"こんぼう\" },\n    { id: 3, name: \"どうのつるぎ\" },\n    { id: 4, name: \"てつのおの\" },\n    { id: 5, name: \"はがねのつるぎ\" },\n    { id: 6, name: \"ほのおのつるぎ\" },\n    { id: 7, name: \"ロトのつるぎ\" }\n];\n\n/** 鎧の一覧 */\nexport const armors: ReadonlyArray<LabelInfo> = [\n    { id: 0, name: \"なし\" },\n    { id: 1, name: \"ぬののふく\" },\n    { id: 2, name: \"かわのふく\" },\n    { id: 3, name: \"くさりかたびら\" },\n    { id: 4, name: \"てつのよろい\" },\n    { id: 5, name: \"はがねのよろい\" },\n    { id: 6, name: \"まほうのよろい\" },\n    { id: 7, name: \"ロトのよろい\" }\n];\n\n/** 盾の一覧 */\nexport const shilds: ReadonlyArray<LabelInfo> = [\n    { id: 0, name: \"なし\" },\n    { id: 1, name: \"かわのたて\" },\n    { id: 2, name: \"てつのたて\" },\n    { id: 3, name: \"みかがみのたて\" }\n];\n\n/** アイテムの一覧 */\nexport const items: ReadonlyArray<LabelInfo> = [\n    { id: 0, name: \"なし\" },\n    { id: 1, name: \"たいまつ\" },\n    { id: 2, name: \"せいすい\" },\n    { id: 3, name: \"キメラのつばさ\" },\n    { id: 4, name: \"りゅうのうろこ\" },\n    { id: 5, name: \"ようせいのふえ\" },\n    { id: 6, name: \"せんしのゆびわ\" },\n    { id: 7, name: \"ロトのしるし\" },\n    { id: 8, name: \"おうじょのあい\" },\n    { id: 9, name: \"のろいのベルト\" },\n    { id: 10, name: \"ぎんのたてごと\" },\n    { id: 11, name: \"しのくびかざり\" },\n    { id: 12, name: \"たいようのいし\" },\n    { id: 13, name: \"あまぐものつえ\" },\n    { id: 14, name: \"にじのしずく\" },\n    { id: 15, name: \"（不明）\", illegal: true }\n];\n\n/** 復活の呪文の素 */\nexport interface Dq1PasswordInfo {\n    /** 名前(4文字) */\n    name: string;\n    /** 武器(0-7) */\n    wapon: number;\n    /** 鎧(0-7) */\n    armor: number;\n    /** 盾(0-3) */\n    shild: number;\n    /** アイテム[8](0-14) */\n    items: Array<number>\n    /** 魔法の鍵(0-6) */\n    key: number;\n    /** 薬草(0-6) */\n    herb: number;\n    /** 経験値(0-65535) */\n    exp: number;\n    /** 所持金(0-65535) */\n    gold: number;\n    /** 竜のウロコ装備済 */\n    dragonScale: boolean;\n    /** 戦士の指輪装備済 */\n    fighterRing: boolean;\n    /** ドラゴン討伐済 */\n    dragonSlayered: boolean;\n    /** ゴーレム討伐済 */\n    golemSlayered: boolean;\n    /** 死の首飾り入手済 */\n    deadAmulet: boolean;\n    /** 暗号化のキー(0-7) */\n    cryptKey: number;\n    /** チェックコード */\n    checkCode: number;\n    /** レベル */\n    level: number;\n    /** 解析成功の場合に真 */\n    valid: boolean;\n}\n\n/** 復活の呪文 */\nexport class Dq1Password {\n\n    /**\n     * レベルを求める.\n     * @param exp 経験値\n     * @return レベル\n     */\n    toLevel(exp: number): number {\n        for (let i = LEVELS.length - 1; 0 <= i; i--) {\n            if (LEVELS[i] <= exp) {\n                return i + 1;\n            }\n        }\n        return 0; // エラー\n    }\n\n    /**\n     * 名前を文字列に変換.\n     * @param nameNums 数字配列の名前\n     * @return 名前\n     */\n    toStringName(nameNums: Array<number>): string {\n        return nameNums\n            .filter(num => 0 <= num && num < NAME_ALPHABET.length)\n            .map(num => NAME_ALPHABET.charAt(num))\n            .join('');\n    }\n\n    /**\n     * 名前を数値配列に変換.\n     * @param name 名前\n     * @return 数値配列\n     */\n    toNumberName(name: string): Array<number> {\n        const nameNums = name.split('')\n            .map(ch => HANKAKU_TO_ZENKAKU[ch] || ch)\n            .map(ch => NAME_ALIAS[ch] || ch)\n            .flatMap(ch => ch.split(''))\n            .map(ch => NAME_ALPHABET.indexOf(ch))\n            .filter(num => num !== -1);\n\n        while (nameNums.length < NAME_LENGTH) {\n            nameNums.push(63); // スペース\n        }\n\n        return nameNums.length === NAME_LENGTH\n            ? nameNums\n            : nameNums.slice(0, NAME_LENGTH);\n    }\n\n    /**\n     * 数値配列を復活の呪文に変換.\n     * @param passwordNums 復活の呪文(数値配列)\n     * @return 復活の呪文\n     */\n    toStringPassword(passwordNums: Array<number>): string {\n        return passwordNums\n            .filter(num => 0 <= num && num < JUMON_ALPHABET.length)\n            .map(num => JUMON_ALPHABET.charAt(num))\n            .join('');\n    }\n\n    /**\n     * 復活の呪文を数値配列に変換.\n     * @param password 復活の呪文\n     * @return 数値配列\n     */\n    toNumberPassword(password: string): Array<number> {\n        return password.split('')\n            .map(ch => JUMON_ALPHABET.indexOf(ch))\n            .filter(num => num !== -1);\n    }\n\n    /**\n     * 呪文を正規化する.\n     * @param password 復活の呪文\n     * @return 正規化した復活の呪文\n     */\n    toNormalizePassword(password: string): string {\n        return password.split('')\n            .map(ch => HANKAKU_TO_ZENKAKU[ch] || ch)\n            .map(ch => JUMON_ALIAS[ch] || ch)\n            .filter(ch => ch === \"？\" || JUMON_ALPHABET.includes(ch))\n            .join('');\n    }\n\n    /** CRC を計算する */\n    private calcuteCrc(bytes: Array<number>): number {\n        // 最初の１バイトを除いた分の CRC を計算する\n        let crc = 0;\n        for (let i = 1; i < CODE_LENGTH; i++) {\n            let octed = bytes[i];\n            for (let j = 0; j < 8; j++) {\n                const carryBit = (((crc >> 8) ^ octed) & 0x80) !== 0;\n                crc = (crc << 1) & 0xffff;\n                octed = (octed << 1) & 0xff;\n                if (carryBit) {\n                    crc ^= 0x1021;\n                }\n            }\n        }\n        return crc & 0xff;\n    }\n\n    /**\n     * 復活の呪文作成.\n     * @param info 復活の呪文の素\n     * @return 復活の呪文\n     */\n    createPassword(info: Dq1PasswordInfo): string {\n        const nameNums = this.toNumberName(info.name);\n\n        // バイト単位に詰める\n        const bytes = [\n            0,\n            info.exp & 0xff,\n            ((info.cryptKey << 7) & 0x80) | (info.deadAmulet ? 0x40 : 0) | nameNums[2],\n            (info.items[3] << 4) | info.items[2],\n            info.gold & 0xff,\n            (nameNums[0] << 2) | (info.golemSlayered ? 0x02 : 0) | ((info.cryptKey >> 1) & 0x01),\n            (info.items[7] << 4) | info.items[6],\n            ((info.cryptKey << 5) & 0x80) | (info.dragonSlayered ? 0x40 : 0) | nameNums[3],\n            (info.wapon << 5) | (info.armor << 2) | info.shild,\n            (info.gold >> 8) & 0xff,\n            (info.key << 4) | (info.herb),\n            (info.items[5] << 4) | info.items[4],\n            (info.exp >> 8) & 0xff,\n            (info.dragonScale ? 0x80 : 0) | (nameNums[1] << 1) | (info.fighterRing ? 1 : 0),\n            (info.items[1] << 4) | info.items[0],\n        ];\n\n        // チェックコード(CRC)を計算する\n        const crc = this.calcuteCrc(bytes);\n        bytes[0] = crc;\n\n        // バイト単位データを、文字(6bit)単位に変換\n        const codes = [];\n        for (let i = 0; i < CODE_LENGTH; i += 3) {\n            const bit24 = (bytes[i + 2] << 16) | (bytes[i + 1] << 8) | (bytes[i]);\n            codes.push(bit24 & 0x3f);\n            codes.push((bit24 >> 6) & 0x3f);\n            codes.push((bit24 >> 12) & 0x3f);\n            codes.push((bit24 >> 18) & 0x3f);\n        }\n\n        // 4 とひとつ前のコードを足していく\n        let prevCode = 0;\n        const passwordNums = [];\n        for (const code of codes) {\n            prevCode = (code + prevCode + 4) & 0x3f;\n            passwordNums.push(prevCode);\n        }\n\n        return this.toStringPassword(passwordNums);\n    }\n\n    /**\n     * DQ1 用復活の呪文を解析する\n     *\n     * @param password 復活の呪文\n     * @return 解析結果\n     */\n    analyzePassword(password: string): Dq1PasswordInfo | undefined {\n        const normalized = this.toNormalizePassword(password);\n        const passwordNums = this.toNumberPassword(normalized);\n        if (passwordNums.length !== JUMON_LENGTH) {\n            return;\n        }\n\n        // 4 を引き、前後の文字の差分を取る\n        const codes = [];\n        for (let i = JUMON_LENGTH - 1; i >= 0; i--) {\n            const prevCode = i === 0 ? 0 : passwordNums[i - 1];\n            codes[i] = (passwordNums[i] - prevCode - 4) & 0x3f;\n        }\n\n        // 文字(6bit)単位を、バイト単位に変換\n        const bytes = [];\n        for (let i = 0; i < JUMON_LENGTH; i += 4) {\n            const bit24 = (codes[i + 3] << 18) | (codes[i + 2] << 12) | (codes[i + 1] << 6) | codes[i];\n            bytes.push(bit24 & 0xff);\n            bytes.push((bit24 >> 8) & 0xff);\n            bytes.push((bit24 >> 16) & 0xff);\n        }\n\n        // チェックコード(CRC)を計算する. 0 なら OK\n        const crc = this.calcuteCrc(bytes);\n        bytes[0] ^= crc;\n\n        const name = this.toStringName([\n            (bytes[5] >> 2) & 0x3f,\n            (bytes[13] >> 1) & 0x3f,\n            (bytes[2]) & 0x3f,\n            (bytes[7]) & 0x3f,\n        ]);\n\n        const items = [\n            bytes[14] & 0x0f,\n            (bytes[14] >> 4) & 0x0f,\n            bytes[3] & 0x0f,\n            (bytes[3] >> 4) & 0x0f,\n            bytes[11] & 0x0f,\n            (bytes[11] >> 4) & 0x0f,\n            bytes[6] & 0x0f,\n            (bytes[6] >> 4) & 0x0f,\n        ];\n\n        const exp = bytes[12] * 256 + bytes[1];\n        const cryptKey = ((bytes[7] >> 5) & 0x04) |\n            ((bytes[5] << 1) & 0x02) |\n            ((bytes[2] >> 7) & 0x01);\n\n        const info: Dq1PasswordInfo = {\n            name: name,\n            wapon: (bytes[8] >> 5) & 0x07,\n            armor: (bytes[8] >> 2) & 0x07,\n            shild: bytes[8] & 0x03,\n            items: items,\n            key: (bytes[10] >> 4) & 0x0f,\n            herb: bytes[10] & 0x0f,\n            exp: exp,\n            gold: bytes[9] * 256 + bytes[4],\n            dragonScale: (((bytes[13] >> 7) & 0x01) !== 0),\n            fighterRing: (((bytes[13]) & 0x01) !== 0),\n            dragonSlayered: (((bytes[7] >> 6) & 0x01) !== 0),\n            golemSlayered: (((bytes[5] >> 1) & 0x01) !== 0),\n            deadAmulet: (((bytes[2] >> 6) & 0x01) !== 0),\n            checkCode: bytes[0],\n            cryptKey: cryptKey,\n            level: this.toLevel(exp),\n            valid: false,\n        };\n\n        // 呪文が正しいかどうかをチェック\n        const valid = this.checkInfo(info);\n        info.valid = valid;\n        return info;\n    }\n\n    /** 呪文が正しいかどうかをチェック */\n    checkInfo(info: Dq1PasswordInfo): boolean {\n        if (info.checkCode !== 0 || info.key > 6 || info.herb > 6) {\n            return false;\n        }\n\n        for (const index in info.items) {\n            if (info.items[index] >= INVALID_ITEM) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * ハテナ付き呪文を元に、有効な呪文を作成する.\n     *\n     * @param password ハテナ付きパスワード\n     * @return 有効なパスワードの配列\n     */\n    hatenaPassword(password: string): Array<string> {\n        // ハテナを探す\n        const position = password.indexOf(\"？\");\n        if (position === -1) {\n            // ハテナが無い\n            const info = this.analyzePassword(password);\n            return (info && info.valid)\n                ? [this.createPassword(info)]\n                : [];\n        } else {\n            // ハテナがあった\n            const passwords: Array<string> = [];\n            for (var i = 0; i < JUMON_ALPHABET.length; i++) {\n                // 先頭のハテナに呪文に使える文字を仮定して、再帰呼び出しする\n                const newPassword = password.substring(0, position)\n                    + JUMON_ALPHABET.charAt(i)\n                    + password.substring(position + 1);\n                const resolved = this.hatenaPassword(newPassword);\n                Array.prototype.push.apply(passwords, resolved);\n            }\n            return passwords;\n        }\n    }\n\n    /**\n     * ハテナの数を数える.\n     * @param password ハテナ付きパスワード（正規化済）\n     * @return ハテナの数\n     */\n    countHatena(password: string): number {\n        return password.split('').filter(ch => ch === '？').length;\n    }\n\n    /**\n     * パスワードを５＋７＋５＋３の形式で編集する.\n     *\n     * @param pswd パスワード(20文字)\n     * @return 編集後パスワード\n     */\n    editPassword(pswd: string): string {\n        return pswd.substring(0, 5) + \"　\"\n            + pswd.substring(5, 12) + \"　\"\n            + pswd.substring(12, 17) + \"　\"\n            + pswd.substring(17, 20);\n    }\n\n}\n","import React from 'react';\n\ninterface Props {\n    /** ラベル名 */\n    label: string;\n    /** 値 */\n    value: string;\n    /** エラー */\n    error?: boolean;\n}\n\nconst OutputLabel: React.FC<Props> = ({\n    label,\n    value,\n    error,\n}) => {\n    return (\n        <div className=\"row-line\">\n            <span\n                className={[\n                    \"label\",\n                    error ? \"error\" : \"\",\n                ].join(\" \")}\n            >{label}</span>\n            <span\n                className={[\n                    \"value\",\n                    error ? \"error\" : \"\",\n                ].join(\" \")}\n            >{value}</span>\n        </div>\n    );\n}\n\nexport default OutputLabel;\n","import * as dq1pswd from './dq1pswd/dq1pswd';\n\n/** 任意の文字列をクリップボードにコピー */\nexport const clipboardCopy = (text: string) => {\n    // create textarea\n    const copyFrom = document.createElement(\"textarea\");\n    // append to body\n    const bodyElm = document.getElementsByTagName(\"body\")[0];\n    bodyElm.appendChild(copyFrom);\n    // copy \n    copyFrom.textContent = text;\n    copyFrom.select();\n    const result = document.execCommand('copy');\n    // remove textarea\n    bodyElm.removeChild(copyFrom);\n    alert('コピーしました');\n    return result;\n}\n\n/** 復活の呪文をツイートする */\nexport const doTweet = (info: dq1pswd.Dq1PasswordInfo, password: string) => {\n    if (info.valid) {\n        const message = \"勇者「\" + info.name + \"」Ｌｖ\" + info.level + \"\\n\" +\n            password.substring(0, 5) + \"　\" + password.substring(5, 12) + \"\\n\" +\n            password.substring(12, 17) + \"　\" + password.substring(17, 20) + \"\\n\" +\n            \"#復活の呪文\\n\";\n        const url = \"https://twitter.com/share?text=\" + encodeURIComponent(message);\n        window.open(url, \"_blank\");\n    }\n}\n\n/** 16進数2桁に編集(0xHH形式) */\nexport const toHex2 = (value: number) => {\n    return '0x' + (('0' + value.toString(16)).toUpperCase().substr(-2));\n}\n\n","import React, { useState, useEffect } from 'react';\nimport * as dq1pswd from './dq1pswd/dq1pswd';\nimport Dq1Info from './Dq1Info'\n\ninterface Props {\n    password: string;\n    setPassword: (password: string) => void;\n    moveEdit: () => void;\n}\n\nconst dq1 = new dq1pswd.Dq1Password();\n\n/** 不正な道具 */\nconst INVALID_ITEM = 15;\n\nconst Dq1Edit: React.FC<Props> = ({\n    password,\n    setPassword,\n    moveEdit,\n}) => {\n    // 入力中の呪文\n    const [nowPassword, setNowPassword] = useState<string>('');\n    // 詳細表示している呪文\n    const [targetPassword, setTargetPassword] = useState<string>('');\n    // 「？」に文字を割り当てた呪文リスト\n    const [passwords, setPasswords] = useState<Array<string>>([]);\n\n    const [validLength, setValidLength] = useState<boolean>(true);\n    const [validItem1, setValidItem1] = useState<boolean>(true);\n    const [validItem2, setValidItem2] = useState<boolean>(true);\n    const [validItem3, setValidItem3] = useState<boolean>(true);\n    const [validItem4, setValidItem4] = useState<boolean>(true);\n    const [validItem5, setValidItem5] = useState<boolean>(true);\n    const [validItem6, setValidItem6] = useState<boolean>(true);\n    const [validItem7, setValidItem7] = useState<boolean>(true);\n    const [validItem8, setValidItem8] = useState<boolean>(true);\n    const [validKey, setValidKey] = useState<boolean>(true);\n    const [validHerb, setValidHerb] = useState<boolean>(true);\n    const [validHatena, setValidHatena] = useState<boolean>(true);\n    const [emptyPasswords, setEmptyPasswords] = useState<boolean>(true);\n\n    /** 呪文の形式が正しいかチェック */\n    const canAnalyze = (password: string): boolean => {\n        // フラグをクリア\n        setValidLength(true);\n        setValidItem1(true);\n        setValidItem2(true);\n        setValidItem3(true);\n        setValidItem4(true);\n        setValidItem5(true);\n        setValidItem6(true);\n        setValidItem7(true);\n        setValidItem8(true);\n        setValidKey(true);\n        setValidHerb(true);\n        setValidHatena(true);\n\n        // 呪文を正規化\n        const normalize = dq1.toNormalizePassword(password);\n        if (normalize.length !== 20) {\n            // 復活の呪文の長さが違う\n            setValidLength(false);\n            return false;\n        }\n\n        // 結果\n        let valid = true;\n        const count = dq1.countHatena(normalize);\n        if (3 < count) {\n            // ハテナが３個超過\n            setValidHatena(false);\n            valid = false;\n        }\n\n        // 仮の値で検証\n        const workPswd = normalize.replace(/？/g, \"あ\");\n        const info = dq1.analyzePassword(workPswd);\n        if (info) {\n            if (\n                info.items[3] === INVALID_ITEM &&\n                !normalize.substring(3, 6).includes(\"？\")\n            ) {\n                // 道具[4]不正：4～6文字目\n                setValidItem4(false);\n                valid = false;\n            } else if (\n                info.items[2] === INVALID_ITEM &&\n                !normalize.substring(3, 5).includes(\"？\")\n            ) {\n                // 道具[3]不正：4～5文字目\n                setValidItem3(false);\n                valid = false;\n            }\n\n            if (\n                info.items[7] === INVALID_ITEM &&\n                !normalize.substring(7, 10).includes(\"？\")\n            ) {\n                // 道具[8]不正：8～10文字目\n                setValidItem8(false);\n                valid = false;\n            } else if (\n                info.items[6] === INVALID_ITEM &&\n                !normalize.substring(7, 9).includes(\"？\")\n            ) {\n                // 道具[7]不正：8～9文字目\n                setValidItem7(false);\n                valid = false;\n            }\n\n            if (\n                info.herb > 6 &&\n                !normalize.substring(12, 14).includes(\"？\")\n            ) {\n                // 薬草不正：13～14文字目\n                setValidHerb(false);\n                valid = false;\n            }\n\n            if (\n                info.items[4] === INVALID_ITEM &&\n                !normalize.substring(13, 16).includes(\"？\")\n            ) {\n                // 道具[5]不正：14～16文字目\n                setValidItem5(false);\n                valid = false;\n            } else {\n                if (\n                    info.key > 6 &&\n                    !normalize.substring(13, 15).includes(\"？\")\n                ) {\n                    // 魔法の鍵不正：14～15文字目\n                    setValidKey(false);\n                    valid = false;\n                }\n                if (\n                    info.items[5] === INVALID_ITEM &&\n                    !normalize.substring(14, 16).includes(\"？\")\n                ) {\n                    // 道具[6]不正：15～16文字目\n                    setValidItem6(false);\n                    valid = false;\n                }\n            }\n\n            if (\n                info.items[0] === INVALID_ITEM &&\n                !normalize.substring(17, 20).includes(\"？\")\n            ) {\n                // 道具[1]不正：18～20文字目\n                setValidItem1(false);\n                valid = false;\n            } else if (\n                info.items[1] === INVALID_ITEM &&\n                !normalize.substring(18, 20).includes(\"？\")\n            ) {\n                // 道具[2]不正：19～20文字目\n                setValidItem2(false);\n                valid = false;\n            }\n        }\n        // 「？」なしなら、エラーが出ても解析OK\n        return count === 0 ? true : valid;\n    };\n\n    const analyze = (password: string) => {\n        if (!canAnalyze(password)) {\n            setPasswords([]);\n            setEmptyPasswords(false);\n            setTargetPassword('');\n            return;\n        }\n\n        const normalized = dq1.toNormalizePassword(password);\n        const editPassword = (\n            normalized.substring(0, 5) + \"　\" +\n            normalized.substring(5, 12) + \"\\n\" +\n            normalized.substring(12, 17) + \"　\" +\n            normalized.substring(17, 20)\n        );\n        setNowPassword(editPassword);\n\n        if (normalized.includes('？')) {\n            // \"？\" が含まれる場合には、一覧表示\n            setPasswords([]);\n            setEmptyPasswords(false);\n            setTargetPassword('');\n            process.nextTick(() => {\n                const list = dq1.hatenaPassword(normalized);\n                setPasswords(list);\n                setEmptyPasswords(list.length === 0);\n            });\n        } else {\n            // \"？\" が含まれない場合は、詳細表示\n            setPasswords([]);\n            setEmptyPasswords(false);\n            setTargetPassword(normalized);\n        }\n    };\n\n    // 初期表示\n    useEffect(() => {\n        if (password) {\n            analyze(password);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [password])\n\n    let errorPassword = null;\n    if (!(validItem1 && validItem2 && validItem3 && validItem4 &&\n        validItem5 && validItem6 && validItem7 && validItem8 &&\n        validKey && validHerb)) {\n        const normalized = dq1.toNormalizePassword(nowPassword);\n        if (20 <= normalized.length) {\n            errorPassword = (\n                <div>\n                    <br />\n                    <div>\n                        <span>「{normalized.substr(0, 3)}</span>\n                        <span\n                            className={(validItem4 && validItem3) ? \"\" : \"error\"}\n                        >{normalized.substr(3, 2)}　</span>\n                        <span\n                            className={validItem4 ? \"\" : \"error\"}\n                        >{normalized.substr(5, 1)}</span>\n                        <span>{normalized.substr(6, 1)}</span>\n                        <span\n                            className={(validItem8 && validItem7) ? \"\" : \"error\"}\n                        >{normalized.substr(7, 2)}</span>\n                        <span\n                            className={validItem8 ? \"\" : \"error\"}\n                        >{normalized.substr(9, 1)}</span>\n                        <span>{normalized.substr(10, 2)}　</span>\n                    </div>\n                    <div>\n                        <span\n                            className={validHerb ? \"\" : \"error\"}\n                        >　{normalized.substr(12, 1)}</span>\n                        <span\n                            className={(validHerb && validItem5 && validKey) ? \"\" : \"error\"}\n                        >{normalized.substr(13, 1)}</span>\n                        <span\n                            className={(validItem6 && validItem5 && validKey) ? \"\" : \"error\"}\n                        >{normalized.substr(14, 1)}</span>\n                        <span\n                            className={(validItem6 && validItem5) ? \"\" : \"error\"}\n                        >{normalized.substr(15, 1)}</span>\n                        <span>{normalized.substr(16, 1)}　</span>\n                        <span\n                            className={validItem1 ? \"\" : \"error\"}\n                        >{normalized.substr(17, 1)}</span>\n                        <span\n                            className={(validItem1 && validItem2) ? \"\" : \"error\"}\n                        >{normalized.substr(18, 2)}</span>\n                        <span>　　　　」</span>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    const errorMessage = (\n        <div>\n            <br />\n            {!validLength && <div>ひらがな20文字で指定してね</div> }\n            {!validHatena && <div>「？」は３つまでにしてね</div> }\n            {!validItem4 && <div>4～6文字目のどこかを変更してね</div> }\n            {!validItem3 && <div>4～5文字目のどこかを変更してね</div> }\n            {!validItem8 && <div>8～10文字目のどこかを変更してね</div> }\n            {!validItem7 && <div>8～9文字目のどこかを変更してね</div> }\n            {!validHerb && <div>13～14文字目のどこかを変更してね</div> }\n            {!validItem5 && <div>14～16文字目のどこかを変更してね</div> }\n            {!validKey && <div>14～15文字目のどこかを変更してね</div> }\n            {!validItem6 && <div>15～16文字目のどこかを変更してね</div> }\n            {!validItem1 && <div>18～20文字目のどこかを変更してね</div> }\n            {!validItem2 && <div>19～20文字目のどこかを変更してね</div> }\n            {emptyPasswords && <div>対象のふっかつのじゅもんがありません</div> }\n            {errorPassword}\n        </div>\n    );\n\n    const passwordList = passwords.length ? (\n        <div className=\"frame\">\n            <br />\n            {passwords.map((pswd, index) => (\n                <div\n                    className={[\n                        \"password-selection\",\n                    ].join(' ')}\n                    key={index}\n                    onClick={() => {\n                        setPassword(pswd.replace(\"　\", \"\"));\n                        window.scrollTo(0,0);\n                    }}\n                >{dq1.editPassword(pswd)}</div>\n            ))}\n        </div>\n    ) : (\n        <div></div>\n    );\n\n    return (\n        <div>\n            <div className=\"frame\">\n                <h2>ふっかつのじゅもんを　いれてください</h2>\n                <textarea\n                    className=\"password-area\"\n                    cols={40}\n                    rows={3}\n                    value={nowPassword}\n                    onChange={(e) => setNowPassword(e.target.value)}\n                />\n            </div>\n            <div>※「？」は３つまで使えます。３つあると時間がかかります。</div>\n\n            {errorMessage}\n\n            {passwordList}\n\n            {targetPassword && <Dq1Info password={targetPassword} />}\n\n            <div className=\"footer\">\n                <div className=\"button-area\">\n                    <span\n                        className=\"button\"\n                        onClick={moveEdit}\n                    >項目を入力</span>\n                    <span\n                        className=\"button\"\n                        onClick={() => analyze(nowPassword)}\n                    >呪文を確認</span>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Dq1Edit;\n","import React from 'react';\nimport OutputLabel from './parts/OutputLabel';\nimport * as dq1pswd from './dq1pswd/dq1pswd';\nimport * as utils from './dq1utils';\n\ninterface Props {\n    password: string;\n}\n\nconst Dq1Info: React.FC<Props> = ({\n    password,\n}) => {\n    const dq1 = new dq1pswd.Dq1Password();\n    const info = dq1.analyzePassword(password);\n    if (!info) {\n        return null;\n    }\n\n    return (\n        <div>\n            <div className=\"frame\">\n                <h2>ステータス</h2>\n                <OutputLabel label=\"なまえ\" value={info.name} />\n                <OutputLabel label=\"Ｌｖ\" value={info.level.toString()} />\n                <OutputLabel label=\"Ｅｘ\" value={info.exp.toString()} />\n                <OutputLabel label=\"ゴールド\" value={info.gold.toString()} />\n                <div className=\"button-area\">\n                    <span\n                        className=\"button\"\n                        onClick={() => {\n                            utils.clipboardCopy(dq1.editPassword(password));\n                        }}\n                    >【コピー】</span>\n                    <span\n                        className={[\n                            \"button\",\n                            info.valid ? \"\" : \"disable\",\n                        ].join(' ')}\n                        onClick={() => {\n                            utils.doTweet(info, password);\n                        }}\n                    >【ツイート】</span>\n                </div>\n            </div>\n            <div className=\"frame\">\n                <h2>そうび</h2>\n                <OutputLabel label=\"ぶき\" value={dq1pswd.wapons[info.wapon].name} />\n                <OutputLabel label=\"よろい\" value={dq1pswd.armors[info.armor].name} />\n                <OutputLabel label=\"たて\" value={dq1pswd.shilds[info.shild].name} />\n                <OutputLabel label=\"りゅうのうろこ\" value={info.dragonScale ? \"装備した\" : \"装備してない\"} />\n                <OutputLabel label=\"せんしのゆびわ\" value={info.fighterRing ? \"装備した\" : \"装備してない\"} />\n                <OutputLabel label=\"しのくびかざり\" value={info.deadAmulet ? \"装備した\" : \"装備してない\"} />\n            </div>\n            <div className=\"frame\">\n                <h2>もちもの</h2>\n                <OutputLabel label=\"道具１\" value={dq1pswd.items[info.items[0]].name} error={!!dq1pswd.items[info.items[0]].illegal} />\n                <OutputLabel label=\"道具２\" value={dq1pswd.items[info.items[1]].name} error={!!dq1pswd.items[info.items[1]].illegal} />\n                <OutputLabel label=\"道具３\" value={dq1pswd.items[info.items[2]].name} error={!!dq1pswd.items[info.items[2]].illegal} />\n                <OutputLabel label=\"道具４\" value={dq1pswd.items[info.items[3]].name} error={!!dq1pswd.items[info.items[3]].illegal} />\n                <OutputLabel label=\"道具５\" value={dq1pswd.items[info.items[4]].name} error={!!dq1pswd.items[info.items[4]].illegal} />\n                <OutputLabel label=\"道具６\" value={dq1pswd.items[info.items[5]].name} error={!!dq1pswd.items[info.items[5]].illegal} />\n                <OutputLabel label=\"道具７\" value={dq1pswd.items[info.items[6]].name} error={!!dq1pswd.items[info.items[6]].illegal} />\n                <OutputLabel label=\"道具８\" value={dq1pswd.items[info.items[7]].name} error={!!dq1pswd.items[info.items[7]].illegal} />\n                <OutputLabel label=\"やくそう\" value={info.herb === 0 ? \"なし\" : info.herb + \"本\"} error={6 < info.herb} />\n                <OutputLabel label=\"かぎ\" value={info.key=== 0 ? \"なし\" : info.key + \"本\"} error={6 < info.key} />\n            </div>\n            <div className=\"frame\">\n                <h2>とうばつ</h2>\n                <OutputLabel label=\"ドラゴン\" value={info.dragonSlayered ? \"倒した\" : \"倒してない\"} />\n                <OutputLabel label=\"ゴーレム\" value={info.golemSlayered ? \"倒した\" : \"倒してない\"} />\n            </div>\n            <div className=\"frame\">\n                <h2>そのほか</h2>\n                <OutputLabel\n                    label=\"パターン\"\n                    value={\"#\" + info.cryptKey} />\n                <OutputLabel\n                    label=\"チェックコード\"\n                    value={utils.toHex2(info.checkCode)}\n                    error={info.checkCode !== 0} />\n            </div>\n        </div>\n    );\n}\n\nexport default Dq1Info;\n","import React from 'react';\n\ninterface Props {\n    /** ラベル名 */\n    label: string;\n    /** 値 */\n    value: string;\n    /** プレースホルダ */\n    placeholder?: string;\n    /** 値を変更 */\n    setValue: (val: string) => void;\n}\n\nconst InputString: React.FC<Props> = ({\n    label,\n    value,\n    placeholder,\n    setValue,\n}) => {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value);\n    }\n\n    return (\n        <div className=\"row-line\">\n            <span className=\"label\">{label}</span>\n            <input\n                className=\"value\"\n                type=\"text\"\n                value={value}\n                placeholder={placeholder}\n                onChange={handleChange}\n            />\n        </div>\n    );\n}\n\nInputString.defaultProps = {\n    placeholder: '',\n}\n\nexport default InputString;\n","import React from 'react';\n\ninterface Props {\n    /** ラベル名 */\n    label: string;\n    /** 値 */\n    value: number;\n    /** 値を変更 */\n    setValue: (val: number) => void;\n    min?: number;\n    max?: number;\n}\n\nconst InputNumber: React.FC<Props> = ({\n    label,\n    value,\n    setValue,\n    min,\n    max,\n}) => {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const num = Number(event.target.value);\n        if (isNaN(num)) {\n            setValue(0);\n        } else if (num < min!) {\n            setValue(min!);\n        } else if (max! < num) {\n            setValue(max!);\n        } else {\n            setValue(num);\n        }\n    }\n\n    return (\n        <div className=\"row-line\">\n            <span className=\"label\">{label}</span>\n            <input\n                className=\"value\"\n                type=\"number\"\n                value={value}\n                min={min}\n                max={max}\n                onChange={handleChange}\n                onFocus={(e) => e.target.select()}\n            />\n        </div>\n    );\n}\n\nInputNumber.defaultProps = {\n    min: 0,\n    max: 65535,\n}\n\nexport default InputNumber;\n","import React from 'react';\nimport * as dq1pswd from '../dq1pswd/dq1pswd';\n\ninterface Props {\n    /** ラベル名 */\n    label: string;\n    /** 値 */\n    value: number;\n    /** 値を変更 */\n    setValue: (val: number) => void;\n    /** 選択肢 */\n    items: ReadonlyArray<dq1pswd.LabelInfo>\n}\n\nconst SelectItem: React.FC<Props> = ({\n    label,\n    value,\n    setValue,\n    items,\n}) => {\n    const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const value = Number(event.target.value);\n        setValue(value);\n    }\n\n    const options = items.map(item => (\n        <option value={item.id} key={item.id}>{item.name}</option>\n    ));\n\n    const selected = items.find(item => item.id === value);\n    const error = (selected && selected.illegal);\n\n    return (\n        <div className=\"row-line\">\n            <span\n                className={[\n                    \"label\",\n                    error ? \"error\" : \"\",\n                ].join(\" \")}\n            >{label}</span>\n            <select\n                className={[\n                    \"value\",\n                    error ? \"error\" : \"\",\n                ].join(\" \")}\n                value={value}\n                onChange={handleChange}\n            >\n                {options}\n            </select>\n        </div>\n    );\n}\n\nexport default SelectItem;\n","import React, { useState, useEffect } from 'react';\nimport InputString from './parts/InputString';\nimport InputNumber from './parts/InputNumber';\nimport SelectItem from './parts/SelectItem';\nimport OutputLabel from './parts/OutputLabel';\nimport * as dq1pswd from './dq1pswd/dq1pswd';\nimport * as utils from './dq1utils';\n\ninterface Props {\n    password: string;\n    setPassword: (password: string) => void;\n    moveAnalize: () => void;\n}\n\nconst dq1 = new dq1pswd.Dq1Password();\n\nconst herbAndKeyItems: ReadonlyArray<dq1pswd.LabelInfo> = [\n    { id: 0, name: \"なし\" },\n    { id: 1, name: \"1本\" },\n    { id: 2, name: \"2本\" },\n    { id: 3, name: \"3本\" },\n    { id: 4, name: \"4本\" },\n    { id: 5, name: \"5本\" },\n    { id: 6, name: \"6本\" },\n    { id: 7, name: \"（7本）\", illegal: true },\n    { id: 8, name: \"（8本）\", illegal: true },\n    { id: 9, name: \"（9本）\", illegal: true },\n    { id: 10, name: \"（10本）\", illegal: true },\n    { id: 11, name: \"（11本）\", illegal: true },\n    { id: 12, name: \"（12本）\", illegal: true },\n    { id: 13, name: \"（13本）\", illegal: true },\n    { id: 14, name: \"（14本）\", illegal: true },\n    { id: 15, name: \"（15本）\", illegal: true },\n];\n\nconst cryptItems: ReadonlyArray<dq1pswd.LabelInfo> = [\n    { id: 0, name: \"#0\" },\n    { id: 1, name: \"#1\" },\n    { id: 2, name: \"#2\" },\n    { id: 3, name: \"#3\" },\n    { id: 4, name: \"#4\" },\n    { id: 5, name: \"#5\" },\n    { id: 6, name: \"#6\" },\n    { id: 7, name: \"#7\" },\n];\n\nconst equipItems: ReadonlyArray<dq1pswd.LabelInfo> = [\n    { id: 0, name: \"装備してない\" },\n    { id: 1, name: \"装備した\" },\n];\n\nconst slayerItems: ReadonlyArray<dq1pswd.LabelInfo> = [\n    { id: 0, name: \"倒してない\" },\n    { id: 1, name: \"倒した\" },\n];\n\nconst Dq1Edit: React.FC<Props> = ({\n    password,\n    setPassword,\n    moveAnalize,\n}) => {\n    const [show, setShow] = useState<boolean>(false);\n\n    const [name, setName] = useState<string>('');\n    const [gold, setGold] = useState<number>(0);\n    const [wapon, setWapon] = useState<number>(0);\n    const [armor, setArmor] = useState<number>(0);\n    const [shild, setShild] = useState<number>(0);\n    const [herb, setHerb] = useState<number>(0);\n    const [key, setKey] = useState<number>(0);\n    const [item1, setItem1] = useState<number>(0);\n    const [item2, setItem2] = useState<number>(0);\n    const [item3, setItem3] = useState<number>(0);\n    const [item4, setItem4] = useState<number>(0);\n    const [item5, setItem5] = useState<number>(0);\n    const [item6, setItem6] = useState<number>(0);\n    const [item7, setItem7] = useState<number>(0);\n    const [item8, setItem8] = useState<number>(0);\n    const [scale, setScale] = useState<number>(0);\n    const [ring, setRing] = useState<number>(0);\n    const [amulet, setAmulet] = useState<number>(0);\n    const [dragon, setDragon] = useState<number>(0);\n    const [golem, setGolem] = useState<number>(0);\n    const [exp, setExp] = useState<number>(0);\n    const [crypt, setCrypt] = useState<number>(0);\n    const [crc, setCrc] = useState<number>(0);\n\n    /** App 側のパスワードを取り込む(新規/更新時) */\n    useEffect(() => {\n        if (!password) {\n            return;\n        }\n        const info = dq1.analyzePassword(password);\n        if (info) {\n            setName(info.name.replace(/　+$/, ''));\n            setWapon(info.wapon);\n            setArmor(info.armor);\n            setShild(info.shild);\n            setHerb(info.herb);\n            setKey(info.key);\n            setItem1(info.items[0]);\n            setItem2(info.items[1]);\n            setItem3(info.items[2]);\n            setItem4(info.items[3]);\n            setItem5(info.items[4]);\n            setItem6(info.items[5]);\n            setItem7(info.items[6]);\n            setItem8(info.items[7]);\n            setGold(info.gold);\n            setExp(info.exp);\n            setScale(info.dragonScale? 1 : 0);\n            setRing(info.fighterRing? 1 : 0);\n            setAmulet(info.deadAmulet? 1 : 0);\n            setDragon(info.dragonSlayered? 1 : 0);\n            setGolem(info.golemSlayered? 1 : 0);\n            setCrypt(info.cryptKey);\n            setCrc(info.checkCode);\n        }\n    }, [password])\n\n    /** 入力内容から復活の呪文を作成 */\n    const createPassword = () => {\n        const info: dq1pswd.Dq1PasswordInfo = {\n            name: name,\n            wapon: wapon,\n            armor: armor,\n            shild: shild,\n            herb: herb,\n            key: key,\n            items: [item1, item2, item3, item4, item5, item6, item7, item8],\n            gold: gold,\n            exp: exp,\n            dragonScale: scale === 1,\n            fighterRing: ring === 1,\n            deadAmulet: amulet === 1,\n            dragonSlayered: dragon === 1,\n            golemSlayered: golem === 1,\n            cryptKey: crypt,\n            level: 0, // dummy\n            checkCode: 0, // dummy\n            valid: false, // dummy\n        };\n        return dq1.createPassword(info); \n    }\n\n    /** 復活の呪文を表示するためのモーダルダイアログ */\n    const modalDialog = () => {\n        const password = createPassword();\n        const info = dq1.analyzePassword(password);\n        if (!info) {\n            return null;\n        }\n\n        // 表示用編集(全角スペースで幅調整している。注意)\n        const passwordInDialogue = (\n            <span>\n                {password.substring(0, 5)}　{password.substring(5, 12)}<br />\n                {password.substring(12, 17)}　{password.substring(17, 20)}　　　　<br />\n            </span>\n        );\n\n        // 王様のセリフ\n        const dialogue = info.valid ? (\n            <div>\n                ＊「そなたに　ふっかつのじゅもんを<br />\n                　　おしえよう！　　　　　　　　　<br />\n                <br />\n                { passwordInDialogue}\n                <br />\n                ＊「これを　かきとめておくのだぞ。 <br />       \n            </div>\n        ) : (\n            <div>\n                <span className=\"error\">じゅもんが　ちがいます</span><br />\n                <br />\n                { passwordInDialogue}\n            </div>\n        );\n\n        return (\n            <div id=\"overlay\" onClick={() => setShow(false)}>\n                <div className=\"frame\" onClick={(e) => e.stopPropagation()}>\n                    <h2>勇者「{info.name}」Ｌｖ {info.level}</h2>\n                    {dialogue}\n                    <br />\n                    <div className=\"button-area\">\n                        <span\n                            className=\"button\"\n                            onClick={() => setShow(false)}\n                        >【閉じる】</span>\n                        <span\n                            className=\"button\"\n                            onClick={() => {\n                                utils.clipboardCopy(dq1.editPassword(password));\n                            }}\n                        >【コピー】</span>\n                        <span\n                            className={[\n                                \"button\",\n                                info.valid ? \"\" : \"disable\",\n                            ].join(' ')}\n                            onClick={() => {\n                                utils.doTweet(info, password);\n                            }}\n                        >【ツイート】</span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <div className=\"frame\">\n                <h2>ステータス</h2>\n                <InputString\n                    label=\"なまえ\"\n                    value={name}\n                    setValue={setName}\n                    placeholder=\"なまえをいれてください\"\n                />\n                <InputNumber label=\"Ｅｘ\" value={exp} setValue={setExp} />\n                <InputNumber label=\"ゴールド\" value={gold} setValue={setGold} />\n            </div>\n            <div className=\"frame\">\n                <h2>そうび</h2>\n                <SelectItem label=\"ぶき\" value={wapon} setValue={setWapon} items={dq1pswd.wapons} />\n                <SelectItem label=\"よろい\" value={armor} setValue={setArmor} items={dq1pswd.armors} />\n                <SelectItem label=\"たて\" value={shild} setValue={setShild} items={dq1pswd.shilds} />\n                <SelectItem label=\"りゅうのうろこ\" value={scale} setValue={setScale} items={equipItems} />\n                <SelectItem label=\"せんしのゆびわ\" value={ring} setValue={setRing} items={equipItems} />\n                <SelectItem label=\"しのくびかざり\" value={amulet} setValue={setAmulet} items={equipItems} />\n            </div>\n            <div className=\"frame\">\n                <h2>もちもの</h2>\n                <SelectItem label=\"道具１\" value={item1} setValue={setItem1} items={dq1pswd.items} />\n                <SelectItem label=\"道具２\" value={item2} setValue={setItem2} items={dq1pswd.items} />\n                <SelectItem label=\"道具３\" value={item3} setValue={setItem3} items={dq1pswd.items} />\n                <SelectItem label=\"道具４\" value={item4} setValue={setItem4} items={dq1pswd.items} />\n                <SelectItem label=\"道具５\" value={item5} setValue={setItem5} items={dq1pswd.items} />\n                <SelectItem label=\"道具６\" value={item6} setValue={setItem6} items={dq1pswd.items} />\n                <SelectItem label=\"道具７\" value={item7} setValue={setItem7} items={dq1pswd.items} />\n                <SelectItem label=\"道具８\" value={item8} setValue={setItem8} items={dq1pswd.items} />\n                <SelectItem label=\"やくそう\" value={herb} setValue={setHerb} items={herbAndKeyItems} />\n                <SelectItem label=\"かぎ\" value={key} setValue={setKey} items={herbAndKeyItems} />\n            </div>\n            <div className=\"frame\">\n                <h2>とうばつ</h2>\n                <SelectItem label=\"ドラゴン\" value={dragon} setValue={setDragon} items={slayerItems}/>\n                <SelectItem label=\"ゴーレム\" value={golem} setValue={setGolem} items={slayerItems} />\n            </div>\n            <div className=\"frame\">\n                <h2>そのほか</h2>\n                <SelectItem label=\"パターン\" value={crypt} setValue={setCrypt} items={cryptItems} />\n                <OutputLabel\n                    label=\"チェックコード\"\n                    value={ utils.toHex2(crc) }\n                    error={crc !== 0}\n                />\n            </div>\n            <div className=\"footer\">\n                <div className=\"button-area\">\n                    <span className=\"button\" onClick={moveAnalize}>呪文を入力</span>\n                    <span className=\"button\" onClick={() => {\n                        setPassword(createPassword());\n                        setShow(true);\n                    }}>呪文を確認</span>\n                </div>\n            </div>\n            { show && modalDialog() }\n        </div>\n    );\n}\n\nexport default Dq1Edit;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Dq1Edit from './Dq1Edit'\nimport Dq1Analize from './Dq1Analize'\n\ntype ModeType = 'edit' | 'analize';\n\nconst scrollTop = () => window.scrollTo(0, 0);\n\nconst App: React.FC = () => {\n  const [page, setPage ] = useState<ModeType>('edit');\n  const [password, setPassword ] = useState<string>('');\n\n  const movePage = (page: ModeType) => {\n    setPage(page);\n    scrollTop();\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>ふっかつのじゅもん</h1>\n      </div>\n\n      { page === 'edit' &&\n        <Dq1Edit\n          password={password}\n          setPassword={setPassword}\n          moveAnalize={() => movePage('analize')}\n        />\n      }\n      { page === 'analize' &&\n        <Dq1Analize\n          password={password}\n          setPassword={setPassword}\n          moveEdit={() => movePage('edit')}\n        />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}